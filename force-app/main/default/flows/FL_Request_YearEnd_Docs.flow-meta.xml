<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>SendEmail</name>
        <label>SendEmail</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>BuildMessage</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>toEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>CurrentUser</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
        </inputParameters>
        <inputParameters>
            <name>composeEmailContent</name>
            <value>
                <stringValue>True</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>tt_Subject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <stringValue>&lt;p&gt;{!tt_Body}&lt;/p&gt;</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>64.0</apiVersion>
    <assignments>
        <name>Append</name>
        <label>Append</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>message</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Contact was created on the account.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Done1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignEmailRecipient</name>
        <label>AssignEmailRecipient</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>toEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recipientEmail</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HasContactName</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>BuildMessage</name>
        <label>BuildMessage</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>message</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tt_Summary</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>WasContactCreated</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_1_of_SetEmail1</name>
        <label>Copy 1 of SetEmail1</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>toEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ContactByName2.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>toEmailBlank</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>CreatedContact1</name>
        <label>CreatedContact</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>createdContact</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Done1</name>
        <label>Done</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>done</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>NoRecipient</name>
        <label>NoRecipient</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>message</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tt_NoRecipient</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>done</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ShouldCreateContact</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetEmail1</name>
        <label>SetEmail1</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>toEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ContactByName.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>toEmailBlank</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetEmail2</name>
        <label>SetEmail2</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>toEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ByNumber.ContactEmail</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>StillNoRecipient</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetEmail3</name>
        <label>SetEmail3</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>toEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetContactById.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>StillNoRecipient</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>AccountExists</name>
        <label>AccountExists?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>ContactByName2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes4</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetAccById</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ContactByName</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>contactEmailBlank</name>
        <label>contactEmailBlank?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>ContactIdBlank</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ByNumber.ContactEmail</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetEmail2</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>ContactIdBlank</name>
        <label>ContactIdBlank?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>StillNoRecipient</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ByNumber.ContactId</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContactById</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasAccount</name>
        <label>HasAccount?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>HasEmail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ByNumber.AccountId</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAccById</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasContactName</name>
        <label>HasContactName?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>toEmailBlank</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes3</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>contactName</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AccountExists</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasEmail</name>
        <label>HasEmail?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>HasContactName</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recipientEmail</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignEmailRecipient</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>ShouldCreateContact</name>
        <label>ShouldCreateContact?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>SendEmail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes7</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>createContact</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ContactByName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ContactByName2</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetContactById</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccById</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NewContact</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>StillNoRecipient</name>
        <label>StillNoRecipient?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>ShouldCreateContact</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes6</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>message</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>tt_NoRecipient</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NoRecipient</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>toEmailBlank</name>
        <label>toEmailBlank?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>StillNoRecipient</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes5</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>toEmail</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>contactEmailBlank</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>WasContactCreated</name>
        <label>WasContactCreated?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Done1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes8</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>createdContact</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Append</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>FL Request YearEnd Docs {!$Flow.CurrentDateTime}</interviewLabel>
    <label>FL Request YearEnd Docs</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>NewContact</name>
        <label>NewContact</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>CreatedContact1</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>GetAccById.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Email</field>
            <value>
                <elementReference>toEmail</elementReference>
            </value>
        </inputAssignments>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>ByNumber</name>
        <label>ByNumber</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>HasAccount</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CaseNumber</field>
            <operator>Contains</operator>
            <value>
                <elementReference>recordKey</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>ContactByName</name>
        <label>ContactByName</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SetEmail1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetAccById.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>Contains</operator>
            <value>
                <elementReference>contactName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>ContactByName2</name>
        <label>ContactByName2</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Copy_1_of_SetEmail1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>Contains</operator>
            <value>
                <elementReference>contactName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetAccById</name>
        <label>GetAccById</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>HasEmail</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ByNumber.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetContactById</name>
        <label>GetContactById</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SetEmail3</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ByNumber.ContactId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>ByNumber</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>tt_Body</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Hello,&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Please send the requested year-end documents for Work Item {!ByNumber.CaseNumber}: {!ByNumber.Subject}.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!messageBody}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Thank you.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>tt_NoRecipient</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;No recipient provided and no default contact found on the Work Item. Please specify a contact name or an email address.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>tt_NotFound</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;I couldn’t uniquely identify a work item for “{!recordKey}”. Please provide a Case Number or Id.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>tt_Subject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Request: Year-End Documents for {!ByNumber.CaseNumber}</text>
    </textTemplates>
    <textTemplates>
        <name>tt_Summary</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Year-end documents request sent for {!ByNumber.CaseNumber} to {!toEmail}.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>contactName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>createContact</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>createdContact</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>done</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>message</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>messageBody</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recipientEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordKey</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>toEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
