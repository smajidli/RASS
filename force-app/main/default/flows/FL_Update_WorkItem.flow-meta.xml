<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>64.0</apiVersion>
    <assignments>
        <name>AppendLogged</name>
        <label>AppendLogged</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>changes</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Logged Hours: {!hoursLoggedDelta} (new Time Log entry created)</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsChangesBlank</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>BuildMessage</name>
        <label>BuildMessage</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>message</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>tt_Header</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>message</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>tt_Result</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>message</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>tt_Footer</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>done</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Init</name>
        <label>Init</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>changes</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue/>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>hasBilledChange</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HasStatus</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>NoChanges</name>
        <label>NoChanges</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>changes</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No field changes applied.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>BuildMessage</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>NoFields</name>
        <label>NoFields</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>message</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>tt_Header</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>message</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>tt_NoChange</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>message</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>tt_Footer</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>done</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>StageBilled</name>
        <label>StageBilled</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>newBilledTotal</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>f_ProposedBilled</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>safeBilled</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>f_ProposedBilled_NonNegative</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>hasBilledChange</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ByIdOrNumber.Total_Hours_Billed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>safeBilled</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>changes</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Total Hours Billed: {!safeBilled}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SaveWorkItem</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>StageDueDate</name>
        <label>StageDueDate</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>ByIdOrNumber.Due_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>newDueDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>changes</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Due Date: {!newDueDate}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HasBilledSetOrDelta</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>StagePriority</name>
        <label>StagePriority</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>ByIdOrNumber.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>newPriority</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>changes</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Priority: {!newPriority}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HasSubject</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>StageStatus</name>
        <label>StageStatus</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>ByIdOrNumber.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>newStatus</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>changes</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Status: {!newStatus}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HasPriority</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>StageSubject</name>
        <label>StageSubject</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>ByIdOrNumber.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>newSubject</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>changes</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Subject: {!newSubject}</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HasDueDate</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>AnyFieldProvided</name>
        <label>AnyFieldProvided?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Init</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>f_HasAnyFieldInput</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NoFields</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasBilledSetOrDelta</name>
        <label>HasBilledSetOrDelta?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>SaveWorkItem</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes5</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>f_IsNull_BilledSet</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>f_IsNull_BilledDelta</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>StageBilled</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasDueDate</name>
        <label>HasDueDate?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>HasBilledSetOrDelta</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes3</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>newDueDate</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>StageDueDate</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasLoggedDelta</name>
        <label>HasLoggedDelta?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>IsChangesBlank</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes6</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>f_IsNull_LoggedDelta</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NewTimeLog</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasPriority</name>
        <label>HasPriority?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>HasSubject</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>newPriority</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>StagePriority</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasStatus</name>
        <label>HasStatus?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>HasPriority</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>newStatus</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>StageStatus</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasSubject</name>
        <label>HasSubject?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>HasDueDate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>newSubject</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>StageSubject</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsChangesBlank</name>
        <label>IsChangesBlank?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>BuildMessage</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes7</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>changes</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NoChanges</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>f_CurrentBilled</name>
        <dataType>Number</dataType>
        <expression>BLANKVALUE({!ByIdOrNumber.Total_Hours_Billed__c}, 0)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>f_HasAnyFieldInput</name>
        <dataType>Boolean</dataType>
        <expression>NOT(
  AND(
    ISBLANK({!newStatus}),
    ISBLANK({!newPriority}),
    ISBLANK({!newSubject}),
    ISBLANK({!newDueDate}),
    ISBLANK({!hoursBilledSet}),
    ISBLANK({!hoursBilledDelta}),
    ISBLANK({!hoursLoggedDelta})
  )
)</expression>
    </formulas>
    <formulas>
        <name>f_IsNull_BilledDelta</name>
        <dataType>Boolean</dataType>
        <expression>ISBLANK({!hoursBilledDelta})</expression>
    </formulas>
    <formulas>
        <name>f_IsNull_BilledSet</name>
        <dataType>Boolean</dataType>
        <expression>ISBLANK({!hoursBilledSet})</expression>
    </formulas>
    <formulas>
        <name>f_IsNull_LoggedDelta</name>
        <dataType>Boolean</dataType>
        <expression>ISBLANK({!hoursLoggedDelta})</expression>
    </formulas>
    <formulas>
        <name>f_ProposedBilled</name>
        <dataType>Number</dataType>
        <expression>IF(
  NOT({!f_IsNull_BilledSet}),
  {!hoursBilledSet},
  IF(
    NOT({!f_IsNull_BilledDelta}),
    {!f_CurrentBilled} + {!hoursBilledDelta},
    {!f_CurrentBilled}
  )
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>f_ProposedBilled_NonNegative</name>
        <dataType>Number</dataType>
        <expression>IF({!f_ProposedBilled} &lt; 0, 0, {!f_ProposedBilled})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>LoggedLabel</name>
        <dataType>String</dataType>
        <expression>IF(
  ISBLANK({!hoursLoggedDelta}),
  &quot;&quot;,
  IF({!hoursLoggedDelta} &lt; 1,
     TEXT(ROUND({!hoursLoggedDelta}*60,0)) &amp; &quot; Minutes&quot;,
     TEXT(ROUND({!hoursLoggedDelta},0)) &amp; &quot; Hour&quot; &amp;
     IF(ROUND({!hoursLoggedDelta},0)=1,&quot;&quot;,&quot;s&quot;)
  )
)</expression>
    </formulas>
    <interviewLabel>FL Update WorkItem {!$Flow.CurrentDateTime}</interviewLabel>
    <label>FL Update WorkItem</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>NewTimeLog</name>
        <label>NewTimeLog</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>AppendLogged</targetReference>
        </connector>
        <inputAssignments>
            <field>Activity__c</field>
            <value>
                <stringValue>Other</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Comments__c</field>
            <value>
                <stringValue/>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Time__c</field>
            <value>
                <elementReference>LoggedLabel</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Work_Item__c</field>
            <value>
                <elementReference>ByIdOrNumber.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Time_Log__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>ByIdOrNumber</name>
        <label>ByIdOrNumber</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AnyFieldProvided</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordKey</elementReference>
            </value>
        </filters>
        <filters>
            <field>CaseNumber</field>
            <operator>Contains</operator>
            <value>
                <elementReference>recordKey</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <sortField>LastModifiedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>SaveWorkItem</name>
        <label>SaveWorkItem</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>HasLoggedDelta</targetReference>
        </connector>
        <inputReference>ByIdOrNumber</inputReference>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>ByIdOrNumber</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>tt_Ambiguous</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Your request matched multiple work items for “{!recordKey}”. Please provide a Case Number or Id.&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>tt_Footer</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;-Subject: {!ByIdOrNumber.Subject}&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Status: {!ByIdOrNumber.Status}&lt;/li&gt;&lt;li&gt;Priority: {!ByIdOrNumber.Priority}&lt;/li&gt;&lt;li&gt;Due: {!ByIdOrNumber.Due_Date__c}&lt;/li&gt;&lt;li&gt;Due Code: {!ByIdOrNumber.Due_Status_Code__c}&lt;/li&gt;&lt;li&gt;Total Hours Billed: {!ByIdOrNumber.Total_Hours_Billed__c}&lt;/li&gt;&lt;/ul&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>tt_Header</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Update Work Item — {!ByIdOrNumber.CaseNumber}&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>tt_NoChange</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;No updatable fields were provided. Nothing changed.&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>tt_NotFound</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;I couldn’t uniquely identify a work item for “{!recordKey}”. Please provide a Case Number (e.g., WI-000123) or the 18-char Id.&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>tt_Result</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;{!changes}&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>changes</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>done</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>foundBy</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>hasBilledChange</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>hoursBilledDelta</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>hoursBilledSet</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>hoursLoggedDelta</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>message</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>newBilledTotal</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>newDueDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>newPriority</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>newStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>newSubject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordKey</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>safeBilled</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
